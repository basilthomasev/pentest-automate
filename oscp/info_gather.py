# code snippet to fetch all the info about the IP
import os
import sys
import functions
import threading
from colorama import Fore, Back, Style

def gather(value):
    count = 0;
    folder = value[0];
    ip = value[1];
    projectname = value[2]
    while count < 2:
        print " "
        option = int(raw_input("Enter 1 for URLs and 2 for IP machines : "))
        if option == 1:
            URL(ip,folder)
            break
        elif option == 2:
            OSCP(ip,folder)
            break
        else:
            print "Wrong. Please try again."



#URL scanning
def URL(ip, folder):
    relax()
    #functions.whois(ip,folder)
    #functions.traceroute(ip,folder)
    #functions.dnslookup(ip,folder)
    #functions.http_headers(ip, folder)
    #functions.nmap_full(ip,folder)
    #functions.gobusterurl(ip,folder)
    #functions.nikto(ip,folder)


#OSCP like machine scannning
def OSCP(ip, folder):
    relax()
    # Function to find the ports
    lists = functions.find_ports(ip,folder)
    # Function to scan for common details
    common_functions(ip, folder)
# =====================================================#
    # Scanning for port 80
    if "80\n" in lists:
        port_80(ip, folder)
    else:
        print "Port 80 is not found and scanned"
# =====================================================#
    # Scanning for port 443
    if "443\n" in lists:
        port_443(ip, folder)
    else:
        print "Port 443 is not found and scanned"
# =====================================================#



def common_functions(ip,folder):
    whois = functions.whois
    nmap = functions.nmap_full
    enum4linux = functions.enum4linux
    traceroute = functions.traceroute
    dnslookup = functions.dnslookup
    arr = [nmap,enum4linux, whois, traceroute, dnslookup]
    for arrays in arr:
        t1 = threading.Thread(target = arrays, args = (ip,folder))
        t1.start()


def port_80(ip,folder):
    nikto80 = functions.nikto80
    gobuster80 = functions.gobuster80
    http_header = functions.http_headers
    arr = [nikto80, gobuster80, http_header]
    for arrays in arr:
        t2 = threading.Thread(target = arrays, args = (ip,folder))
        t2.start()

def port_443(ip,folder):
    nikto443 = functions.nikto443
    testssl443 = functions.testssl443
    gobuster443 = functions.gobuster443
    arr = [nikto443, gobuster443, testssl443]
    for arrays in arr:
        t2 = threading.Thread(target = arrays, args = (ip,folder))
        t2.start()

# Relax message
def relax():
    print(Fore.GREEN +"""
    --------------------------------------------------------
    Information Gathering takes time, sit back and relax !!!
    --------------------------------------------------------
    """)
